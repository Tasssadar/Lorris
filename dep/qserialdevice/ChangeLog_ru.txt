Текущее

*******************************************************************************************
26/02/2011 Версия 0.4.0 Денис Шиенков

+ Много изменений, см. http://gitorious.org/qserialdevice/qserialdevice/commits/master

*******************************************************************************************
XX/YY/2010 Версия 0.3.0 Денис Шиенков

+ Много не задукоментированных исправлений (см. в git репозитории).

- Класс SerialDeviceInfo для Windows попытка добавить поддержку некоторых
  виртуальных, ethernet2serial портов и т.п. 
- Класс SerialDeviceWatcher для Windows попытка добавить поддержку некоторых
  виртуальных, ethernet2serial портов и т.п. 
- В классе SerialDeviceInfo для Windows исправлены методы: description() и manufacturer().
  В Windows XP и Windows 7 необходимые нам значения хранятся в реестре по разному:
  в Windows 7 они замусорены всяким "хламом", а в Windows XP они нормальные.
- Изменен метод "quint64 bytesAvailable()" (добавлен модификатор "const").
- Изменен метод "bool sendBreak()" (добавлен модификатор "const").
- Изменен метод "bool setBreak()" (добавлен модификатор "const").
- Изменен метод "bool setRts(bool set)" (добавлен модификатор "const").
- Изменен метод "bool setDtr(bool set)" (добавлен модификатор "const").
- Изменен метод: "bool flush()" и все его платформо-зависимые реализации 
  (добавлен модификатор "const").
- Изменен метод: "quint16 AbstractSerial::lineStatus()" и все его платформо-зависимые реализации 
  (добавлен модификатор "const" и т.д.).
- Добавлен и исправлен список флагов AbstractSerial::LineStatus.
- Исправлена ошибка ложного срабатывания сигнала readyRead() в *.nix при выдергивании USB/Serial конвертера из PC. Анализ
  валидности проверяется теперь в классе SerialNotifier.
- Произверена замена класса WinSerialNotifier на SerialNotifier. Теперь класс SerialNotifier является кроссплатформенным
  и выполняет функции аналогичные QSocketNotifier.
- Произведен рефакторинг кода на соответствие коду в Qt 4.6.x.
- В AbstractSerial в метод "close" для Windows добавлена функция ::CancelIO().
- SerialDeviceInfo: (windows) исправлен метод HardwareID() к которому добавлена
  функция static QString getREContent().
- Небольшие изменения в примерах: удалены функции printDataToHex().
- AbstractSerial: (windows) исправлено "падение" при использовании метода waitForReadyRead(),
  (при использовании примера /examples/reader).
- SerialDeviceWatcher: (Windows) исправлен мониторинг подключения/отключения устройства если оно было перед этим открыто. 
- Для SerialDeviceInfo и SerialDeviceWatcher (windows) добавлен класс WinRegKeyReader вместо статических функций враппера.
- AbstractSerial и SerialDeviceInfo (unix) переведены на TTYLocker.
- Для *.nix добавлен класс TTYLocker для блокировки устройств.
- Исправлена поддержка режимов паритета Space (и запрет Mark) для *.nix не поддерживающих макрос CMSPAR
- Добавлена "защита" от неправильных действий программиста в части выполнения методов read() и write() при 
  неправильных опциях открытия порта (пример когда порт открыт как WriteOnly, а мы пытаемся из него читать и т.п.).
- Добавлен функционал SerialDeviceWatcher для MacOSX (тестовая версия) (спасибо Laszlo Bako-Szabo)
- Произведено исправление комментариев для Doxygen.
- Произведено исправление и изменение примеров /examples/AnyMaster и /examples/AnySlave.
- Произведена миграция класса AbstractSerial с QIODevice на QObject. Это вызвано крэшем библиотеки при
  работе в ОС Windows. А также необходимостью написания меторов write(), read() и т.п. со своими особенностями.
- Добавлены методы: sendBreak(), setBreak().
- Добавлены методы: setInputBaudRate(), setOutputBaudRate(), inputBaudRate(), outputBaudRate().
- Изменено хранение параметров с QHash в QMap.
- Добавлены методы: baudRateMap(), dataBitsMap(), parityMap(), stopBitsMap(), flowControlMap() для QComboBox.
- Исправлено падение QSerialDeviceWatcher при вызове setEnabled(false).
- Добаввлены примеры /examples/anymaster и /examples/anyslave.
- Изменен (разбит на отдельные шаги) метод открытия устройства.
  Теперь устройство открывается не с параметрами 9600 8N1, а с параметрами, которые определены
  по-умолчанию в системе. При открытии устройства автоматически вызывается метод типа: detectDefaultCurrentSettings(),
  который пытается определить текущие параметры устройства.
- исправлены методы автоматического создания/удаления LOCK файла устройства в *.nix.

PS: спасибо "Laszlo Bako-Szabo", "kostya2vntu" и др.
*******************************************************************************************
02/03/2010 Версия 0.2.0 Денис Шиенков

- Изменена структура каталогов проекта
- Добавлены классы SerialDeviceInfo и SerialDeviceWatcher
- Из класса AbstractSerial удален метод devicesAvailable(),
  теперь этот метод используется в SerialDeviceWatcher 
- Улучшен и подчищен код, добавлено много нового
- Обновлена документация
- Добавлена возможность сборки библиотеки в интегрированном и дифференцированном виде
- Добавлены примеры: serialdeviceinfo и serialdevicewatcher
- Для классов SerialDeviceInfo и SerialDeviceWatcher в GNU/Linux (или других *.nix) необходим UDEV
- и другие изменения
*******************************************************************************************
04/08/2009 Версия 0.1.0 Денис Шиенков

- Полностью переработана структура проекта в которой изменены имена переменных и т.д.
- Первая тестовая версия с новой структурой.
- Версия v 0.1.0 кардинально отличается от версии v 0.0.3 (устаревшая)
*******************************************************************************************