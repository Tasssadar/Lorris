== QSerialSevice ==

Содержание:
1. О проекте
2. Сборка
3. Установка
4. Лицензия
5. Авторы
6. Ссылки
----------------




1. О проекте.
~~~~~~~~~~~~

QSerialDevice - это кросс-платформенная библиотека для работы с последовательными 
устройствами (портами) основанная на Qt4 (http://qt.nokia.com/).

Внимание: 
В текущей версии - гарантируется безошибочная работа (тестировалась автором) только в операционных системах: 
- Windows XP Pro Sp3 / Win 7 32bit.
- GNU/Linux x86_64.

Поэтому в других случаях работа не гарантируется!

1.1 О классах.

Библиотека на текущий момент поддерживает следующие классы:

AbstractSerial      - класс, который предоставляет интерфейс для работы
                      с последовательными устройствами.
SerialDeviceEnumerator - класс, который предоставляет интерфейс 
                      нотификации (слежения) за последовательными устройствами, 
					  а также для получения информации о последовательных устройствах.
					  
(подробное описание смотри в документации)

Примечание: 
Классы SerialDeviceWatcher и SerialDeviceInfo устарели и больше не поддерживаются.
Вместо них используйте класс SerialDeviceEnumerator.


1.2 О примерах.

Библиотека в текущем своем составе содержит консольные примеры программ в директории /examples,
утилиты:

writer                  - предназначена для демонстрации использования библиотеки при записи данных в порт.

reader                  - предназначена для демонстрации использования библиотеки при чтении данных из 
                          порта с использованием метода: waitForReadyRead().

sreader                 - предназначена для демонстрации использования библиотеки при чтении данных из
                          порта с использованием сигнала: readyRead().
    
enumerator				- предназначена для демонстрации использования библиотеки для нотификации (слежения) 
                          за последовательными устройствами, а также для демонстрации использования библиотеки для получения 
                          информации о последовательных устройствах.

anymaster               - предназначена для демонстрации использования библиотеки в качестве абстрактного
                          протокола обмена через последовательный интерфейс в качестве мастера 
                          (реализованы методы типа: запрос/ответ к ведомому anyslave)
                          
anyslave                - предназначена для демонстрации использования библиотеки в качестве абстрактного
                          протокола обмена через последовательный интерфейс в качестве ведомого 
                          (реализованы методы типа: прием/ответ к мастеру anymaster)
                          
(подробнее о сборке библиотеки и примеров см. ниже в разделе №2 "Сборка")

1.3 О Документации.

Документация: (doc/ru/html или doc/en/html) выполнена на двух языках: английском и русском.
(замечание: сгенерирована с помощью Doxygen).


2. Сборка
~~~~~~~~~~~~

2.1 Требования.

Для сборки проекта в OC Windows и GNU/Linux (к примеру) необходимы обязательные условия:
- должна быть установлена библиотека Qt4 > 4.6.0 (можно и 4.5.0, но возможна правка исходного кода некоторых классов)
  и правильно настроены её переменные окружения.
- должен быть установлен компилятор и настроены его переменные окружения.

Примечание: 
Для ОС GNU/Linux для сборки класса SerialDeviceEnumerator должен быть установлен UDEV (http://www.kernel.org/pub/linux/utils/kernel/hotplug/udev.html)

2.2 Сборка библиотеки.

Примечание: По умолчанию библиотека собирается с опцией: staticlib, поэтому
все рекомендации по сборке библиотеки и примеров, которые приведены ниже, 
даются только для статической сборке библиотеки. 

    2.2.1 Сборка только библиотеки с использованием qmake.
    
		2.2.1.1 С использованием QtCreator
		1. Распакуйте архив с исходными кодами проекта.
		2. Запустите QtCreator
		3. В меню QtCreator: "File->Open file or project" выберите файл: BuildLibrary.pro
		4. Нажмите в QtCreator "Build" и т.п.
	
		2.2.1.2 С использованием командной строки.
		1. Распакуйте архив с исходными кодами проекта.
		2. Перейдите в директорию с исходными кодами проекта:
			#cd qserialdevice-qserialdevice
		3. Выполните следующие команды:
			#qmake BuildLibrary.pro
			#make
        
    2.2.2 Сборка только библиотеки с использованием CMake.
	
		2.2.2.1 С использованием QtCreator
		Сборка только библиотеки с использованием CMake не тестировалась.
		Возможно придется исправить файл: src/CMakeLists.txt .
        
		2.2.2.2 С использованием командной строки.
		Сборка только библиотеки с использованием CMake не тестировалась.
		Возможно придется исправить файл: src/CMakeLists.txt .
		
    2.2.3 Сборка примеров с использованием qmake.
    
    Примечание: при сборке примеров также будет собираться и сама библиотека!
	
		2.2.3.1 С использованием QtCreator
		1. Распакуйте архив с исходными кодами проекта.
		2. Запустите QtCreator
		3. В меню QtCreator: "File->Open file or project" выберите файл: BuildExamples.pro
		4. Нажмите в QtCreator "Build" и т.п.
    
		2.2.3.2 С использованием командной строки.
		1. Распакуйте архив с исходными кодами проекта.
		2. Перейдите в директорию с исходными кодами проекта:
			#cd qserialdevice-qserialdevice
		3. Выполните следующие команды:
			#qmake BuildExamples.pro
			#make
	
    2.2.4 Сборка примеров с использованием CMake.
    
    Примечание: при сборке примеров также будет собираться и сама библиотека!
	
		2.2.4.1 С использованием QtCreator
		1. Распакуйте архив с исходными кодами проекта.
		2. Запустите QtCreator
		3. В меню QtCreator: "File->Open file or project" выберите файл: CMakeLists.txt
		4. Нажмите в QtCreator "Build" и т.п.
    
		2.2.4.2 С использованием командной строки.
		1. Распакуйте архив с исходными кодами проекта.
		2. Параллельно с директорией исходных кодов проекта создайте
		   директорию "cmake-build".
		   Пример:
		   /
		   |->/qserialdevice-qserialdevice
		   |->/cmake-build
		   
		3. Перейдите в директорию с "cmake-build":
			#cd cmake-build
		4. Выполните следующие команды:
			#cmake ../qserialdevice-qserialdevice
			#make
			
	    Примечание: возможно придется добавить некоторые параметры в командную строку
		для сборки в зависимости от используемого компилятора (читай документайию по CMake).
	

    
2.3 Сборка документации.

Для сборки документации необходимо:
1. Установить Doxygen : http://www.stack.nl/~dimitri/doxygen/ .
2. Запустить утилиту Doxywizard (она появится после установки Doxygen).
3. Выбрать в меню Doxywizard "File->Open" файл "Doxyfile_en" или "Doxyfile_ru" в зависимости от желаемого языка.
4. Нажать в Doxywizard на вкладке "Run" кнопку "Run Doxygen".
5. Если Doxywizard уведомит о том что нету директории /doc - то создать эту директорию в корне распакованного архива библиотеки.




3. Установка
~~~~~~~~~~~~




4. Лицензия
~~~~~~~~~~~~~
GPL

Copyright (C) 2009 Denis Shienkov <scapig2@yandex.ru>

Подробнее см. файл: copying




5. Авторы
~~~~~~~~~~~~~

Разработчик : Денис Шиенков
ICQ         : 321789831
e-mail      : scapig2@yandex.ru




6. Ссылки
~~~~~~~~~~~~~




